(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{249:function(t,n,a){"use strict";a.r(n);var e=a(0),s=Object(e.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"how-to-render-html-markup-coming-from-input-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-render-html-markup-coming-from-input-slot","aria-hidden":"true"}},[t._v("#")]),t._v(" How to render HTML Markup coming from input slot?")]),t._v(" "),a("p",[t._v("When you want to render HTML markup code that comes from an input slot, you should use the "),a("em",[t._v("innerHTML")]),t._v(" of the target HTML element. In the logic of your elementary component, you should use "),a("em",[t._v("model[SlotId]Changed")]),t._v(" method to access the HTML code and set it to the desired component.")]),t._v(" "),a("p",[t._v("Let's say you have a component with a string input slot called "),a("em",[t._v("html")]),t._v(", and you want to render this html code within a div whose id is "),a("em",[t._v("container")]),t._v(". To aim this you should code something similar to:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("modelHtmlChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" container "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#container'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])])])},[],!1,null,null,null);n.default=s.exports}}]);